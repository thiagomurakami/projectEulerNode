// Even Fibonacci numbers
// Problem 2
// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even-valued terms.

var R = require('ramda');

let oldTerm = 1;
let currentTerm = 2;
let nextTerm = 0;


const isEven = number => number % 2 === 0;
function fib(firstTerm, secondTerm, nextTerm = firstTerm+secondTerm) {
  return [secondTerm, nextTerm, nextTerm+secondTerm]
}

function sumFibIfEven(value) {
  let sum = 0;
  let sequence = [1, 2, 3];
  while(sequence[1] < value) {
    if(isEven(sequence[1])) sum += sequence[1];
    sequence = fib(...sequence);
  }
  return sum;
}

if (require.main === module) {
    console.log(sumFibIfEven(4000000));
}

module.exports = { isEven, fib, sumFibIfEven };
